generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Document {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  cases     Case[]
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  email       String    @unique
  name        String
  lastName    String
  password    String
  role        Role      @default(USER)
  refreshToken String[] @default([])
  imageUrl    String    @default("image")
  cases       Case[]
}

model Case {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime   @default(now())
  caseName   String
  jury       String
  caseNumber String
  applicant  String
  respondent String
  type       CaseType
  status     CaseStatus @default(INITIATED)
  userId     String     @db.ObjectId
  User       User       @relation(fields: [userId], references: [id])
  movements  Movement[]
  documentId String?    @db.ObjectId
  Document   Document?  @relation(fields: [documentId], references: [id])
}

model Movement {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime     @default(now())
  date      DateTime
  title     String
  type      MovementType
  done      Boolean      @default(false)
  content   String
  caseId    String       @db.ObjectId
  Case      Case         @relation(fields: [caseId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum CaseType {
  SUCCESSION
  EXECUTION
  TERMINATION
  DAMAGES_AND_LOSSES
  CONTRACT_DISPUTE
  FAMILY_LAW
  CRIMINAL
  PROPERTY_DISPUTE
  PERSONAL_INJURY
  INTELLECTUAL_PROPERTY
}

enum CaseStatus {
  INITIATED
  EVIDENCE
  JUDGMENT
  CLOSED
}

enum MovementType {
  APPOINTMENT
  PROCEDURAL_ACTION
}